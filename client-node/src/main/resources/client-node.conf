akka {
  loglevel = DEBUG
  log-dead-letters-during-shutdown = off

  cluster {
    failure-detector {
      implementation-class = "akka.remote.PhiAccrualFailureDetector"
      heartbeat-interval = 2s
    }
  }

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    serializers {
      java = "akka.serialization.JavaSerializer"
    }
  }

  remote {
    netty.tcp {
      hostname = "127.0.0.1"
      port = 0
    }
  }

  cluster {
    seed-nodes = ["akka.tcp://ClusterSystem@127.0.0.1:2551"]
    roles = ["client-node", "client-worker-node"]
    log-info = on
    auto-down-unreachable-after = 10s

    sharding {
      role = "client-worker-node"
      journal-plugin-id = "cassandra-journal"
      snapshot-plugin-id = "cassandra-snapshot-store"

      least-shard-allocation-strategy {
        rebalance-threshold = 10
        max-simultaneous-rebalance = 3
      }
    }
  }

  akka.persistence {
    snapshot-store.plugin = "cassandra-snapshot-store"
    journal.plugin = "cassandra-journal"
  }
}

app {
  collector.broadcast-interval = 2 seconds
}